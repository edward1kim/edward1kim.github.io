{"version":3,"sources":["webpack:///./src/templates/postLists.js"],"names":["PostLists","data","pageContext","title","posts","allMarkdownRemark","edges","filter","post","node","frontmatter","isHead","pageTitle","className","prev","to","next","map","fields","slug","key","id","date","excerpt"],"mappings":"6FAAA,gGAIe,SAASA,EAAT,GAA2C,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YAClCC,EAAQD,EAAYC,MACtBC,EAAQH,EAAKI,kBAAkBC,MAGnC,OAFAF,EAAQA,EAAMG,QAAO,SAAAC,GAAI,OAAqC,IAAjCA,EAAKC,KAAKC,YAAYC,UAGjD,kBAAC,IAAD,CAAQC,UAAWT,GACjB,wBAAIU,UAAU,aAAaV,GAC3B,yBAAKU,UAAU,eACZX,EAAYY,KAAO,kBAAC,IAAD,CAAMC,GAAIb,EAAYY,KAAMD,UAAU,YAAtC,QAA+D,4BAClFX,EAAYc,KAAO,kBAAC,IAAD,CAAMD,GAAIb,EAAYc,KAAMH,UAAU,YAAtC,QAA+D,6BAEpFT,EAAMa,KAAI,gBAAGR,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CAAMM,GAAIN,EAAKS,OAAOC,KAAMN,UAAU,YACpC,yBAAKA,UAAU,UAAUO,IAAKX,EAAKY,IACjC,wBAAIR,UAAU,kBACXJ,EAAKC,YAAYP,OAEpB,wBAAIU,UAAU,QAAQJ,EAAKC,YAAYY,MACvC,uBAAGT,UAAU,YAAYJ,EAAKc,cAIpC,yBAAKV,UAAU,6BACZX,EAAYY,KAAO,kBAAC,IAAD,CAAMC,GAAIb,EAAYY,KAAMD,UAAU,YAAtC,QAA+D,4BAClFX,EAAYc,KAAO,kBAAC,IAAD,CAAMD,GAAIb,EAAYc,KAAMH,UAAU,YAAtC,QAA+D","file":"component---src-templates-post-lists-js-54db133f604f2bcbc05d.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default function PostLists({ data, pageContext }) {\n  const title = pageContext.title\n  let posts = data.allMarkdownRemark.edges\n  posts = posts.filter(post => post.node.frontmatter.isHead === false)\n\n  return (\n    <Layout pageTitle={title}>\n      <h1 className='headTitle'>{title}</h1>\n      <div className='nextPrevBox'>\n        {pageContext.prev ? <Link to={pageContext.prev} className='nextPrev'>Prev</Link> : <p></p>}\n        {pageContext.next ? <Link to={pageContext.next} className='nextPrev'>Next</Link> : <p></p>}\n      </div>\n      {posts.map(({ node }) => (\n        <Link to={node.fields.slug} className='postLink'>\n          <div className='postBox' key={node.id}>\n            <h3 className='postListsTitle'>\n              {node.frontmatter.title}\n            </h3>\n            <h5 className='date'>{node.frontmatter.date}</h5>\n            <p className='postText'>{node.excerpt}</p>\n          </div>\n        </Link>\n      ))}\n      <div className='nextPrevBox bottomPrevBox'>\n        {pageContext.prev ? <Link to={pageContext.prev} className='nextPrev'>Prev</Link> : <p></p>}\n        {pageContext.next ? <Link to={pageContext.next} className='nextPrev'>Next</Link> : <p></p>}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($category: [String], $limit: Int!, $skip: Int!) {\n    allMarkdownRemark(\n      sort: { \n        fields: [frontmatter___date], \n        order: DESC \n      }\n      filter: {\n        frontmatter: {\n          category: {in: $category}\n          isHead: {eq: false}\n        }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            category\n            isHead\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 300)\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}