{"version":3,"sources":["webpack:///./src/templates/postLists.js"],"names":["PostLists","data","posts","allMarkdownRemark","edges","filter","node","frontmatter","isHead","categoryHead","length","find","title","pageTitle","className","map","to","fields","slug","key","id","date","excerpt"],"mappings":"6FAAA,gGAIe,SAASA,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAC9BC,EAAQD,EAAKE,kBAAkBC,MAAMC,QAAO,qBAAGC,KAAiBC,YAAYC,UAC5EC,EAAeR,EAAKE,kBAAkBC,MAAMC,QAAO,qBAAGC,KAAgBC,YAAYC,UAOtF,OALEC,EADEA,EAAaC,OAAS,EACTD,EAAaE,MAAK,kBAAyC,SAAzC,EAAGL,KAAgBC,YAAYK,SAAkBN,KAEnEG,EAAa,GAAGH,KAI/B,kBAAC,IAAD,CAAQO,UAAWJ,EAAaF,YAAYK,OAC1C,wBAAIE,UAAU,aAAaL,EAAaF,YAAYK,OACnDV,EAAMa,KAAI,gBAAGT,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CAAMU,GAAIV,EAAKW,OAAOC,KAAMJ,UAAU,YACpC,yBAAKA,UAAU,UAAUK,IAAKb,EAAKc,IACjC,wBAAIN,UAAU,kBACXR,EAAKC,YAAYK,OAEpB,wBAAIE,UAAU,QAAQR,EAAKC,YAAYc,MACvC,uBAAGP,UAAU,YAAYR,EAAKgB","file":"component---src-templates-post-lists-js-e552e98a61bc3e834f1a.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default function PostLists({ data }) {\n  let posts = data.allMarkdownRemark.edges.filter(({ node }) => !node.frontmatter.isHead)\n  let categoryHead = data.allMarkdownRemark.edges.filter(({ node }) => node.frontmatter.isHead)\n  if (categoryHead.length > 1) {\n    categoryHead = categoryHead.find(({ node }) => node.frontmatter.title === 'Home').node\n  } else {\n    categoryHead = categoryHead[0].node\n  }\n\n  return (\n    <Layout pageTitle={categoryHead.frontmatter.title}>\n      <h1 className='headTitle'>{categoryHead.frontmatter.title}</h1>\n      {posts.map(({ node }) => (\n        <Link to={node.fields.slug} className='postLink'>\n          <div className='postBox' key={node.id}>\n            <h3 className='postListsTitle'>\n              {node.frontmatter.title}\n            </h3>\n            <h5 className='date'>{node.frontmatter.date}</h5>\n            <p className='postText'>{node.excerpt}</p>\n          </div>\n        </Link>\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($category : [String]) {\n    allMarkdownRemark(\n      sort: { \n        fields: [frontmatter___date], \n        order: DESC \n      }\n      filter: {\n        frontmatter: {\n          category: {in: $category}\n        }\n      }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            category\n            isHead\n          }\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 300)\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}